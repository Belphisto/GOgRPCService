// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.6
// 	protoc        v6.30.2
// source: proto/social.proto

package proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
	unsafe "unsafe"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// Запрос на отправку сообщения
type MessageRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Username      string                 `protobuf:"bytes,1,opt,name=username,proto3" json:"username,omitempty"` // Имя пользователя
	Content       string                 `protobuf:"bytes,2,opt,name=content,proto3" json:"content,omitempty"`   // Текст сообщения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageRequest) Reset() {
	*x = MessageRequest{}
	mi := &file_proto_social_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageRequest) ProtoMessage() {}

func (x *MessageRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_social_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageRequest.ProtoReflect.Descriptor instead.
func (*MessageRequest) Descriptor() ([]byte, []int) {
	return file_proto_social_proto_rawDescGZIP(), []int{0}
}

func (x *MessageRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *MessageRequest) GetContent() string {
	if x != nil {
		return x.Content
	}
	return ""
}

// Ответ после отправки сообщения
type MessageResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Success       bool                   `protobuf:"varint,1,opt,name=success,proto3" json:"success,omitempty"` // Успех выполнения
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *MessageResponse) Reset() {
	*x = MessageResponse{}
	mi := &file_proto_social_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MessageResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MessageResponse) ProtoMessage() {}

func (x *MessageResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_social_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MessageResponse.ProtoReflect.Descriptor instead.
func (*MessageResponse) Descriptor() ([]byte, []int) {
	return file_proto_social_proto_rawDescGZIP(), []int{1}
}

func (x *MessageResponse) GetSuccess() bool {
	if x != nil {
		return x.Success
	}
	return false
}

// Запрос на получение истории сообщений
type FeedRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Limit         int32                  `protobuf:"varint,1,opt,name=limit,proto3" json:"limit,omitempty"` // Количество сообщений для запроса
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedRequest) Reset() {
	*x = FeedRequest{}
	mi := &file_proto_social_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedRequest) ProtoMessage() {}

func (x *FeedRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_social_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedRequest.ProtoReflect.Descriptor instead.
func (*FeedRequest) Descriptor() ([]byte, []int) {
	return file_proto_social_proto_rawDescGZIP(), []int{2}
}

func (x *FeedRequest) GetLimit() int32 {
	if x != nil {
		return x.Limit
	}
	return 0
}

// Ответ с историей сообщений
type FeedResponse struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Messages      []*MessageRequest      `protobuf:"bytes,1,rep,name=messages,proto3" json:"messages,omitempty"` // Список сообщений
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *FeedResponse) Reset() {
	*x = FeedResponse{}
	mi := &file_proto_social_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *FeedResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*FeedResponse) ProtoMessage() {}

func (x *FeedResponse) ProtoReflect() protoreflect.Message {
	mi := &file_proto_social_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use FeedResponse.ProtoReflect.Descriptor instead.
func (*FeedResponse) Descriptor() ([]byte, []int) {
	return file_proto_social_proto_rawDescGZIP(), []int{3}
}

func (x *FeedResponse) GetMessages() []*MessageRequest {
	if x != nil {
		return x.Messages
	}
	return nil
}

// Пустой запрос для потокового обновления
type StreamRequest struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *StreamRequest) Reset() {
	*x = StreamRequest{}
	mi := &file_proto_social_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *StreamRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*StreamRequest) ProtoMessage() {}

func (x *StreamRequest) ProtoReflect() protoreflect.Message {
	mi := &file_proto_social_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use StreamRequest.ProtoReflect.Descriptor instead.
func (*StreamRequest) Descriptor() ([]byte, []int) {
	return file_proto_social_proto_rawDescGZIP(), []int{4}
}

var File_proto_social_proto protoreflect.FileDescriptor

const file_proto_social_proto_rawDesc = "" +
	"\n" +
	"\x12proto/social.proto\x12\x06social\"F\n" +
	"\x0eMessageRequest\x12\x1a\n" +
	"\busername\x18\x01 \x01(\tR\busername\x12\x18\n" +
	"\acontent\x18\x02 \x01(\tR\acontent\"+\n" +
	"\x0fMessageResponse\x12\x18\n" +
	"\asuccess\x18\x01 \x01(\bR\asuccess\"#\n" +
	"\vFeedRequest\x12\x14\n" +
	"\x05limit\x18\x01 \x01(\x05R\x05limit\"B\n" +
	"\fFeedResponse\x122\n" +
	"\bmessages\x18\x01 \x03(\v2\x16.social.MessageRequestR\bmessages\"\x0f\n" +
	"\rStreamRequest2\xc4\x01\n" +
	"\rSocialService\x12>\n" +
	"\vSendMessage\x12\x16.social.MessageRequest\x1a\x17.social.MessageResponse\x124\n" +
	"\aGetFeed\x12\x13.social.FeedRequest\x1a\x14.social.FeedResponse\x12=\n" +
	"\n" +
	"StreamFeed\x12\x15.social.StreamRequest\x1a\x16.social.MessageRequest0\x01B\bZ\x06/protob\x06proto3"

var (
	file_proto_social_proto_rawDescOnce sync.Once
	file_proto_social_proto_rawDescData []byte
)

func file_proto_social_proto_rawDescGZIP() []byte {
	file_proto_social_proto_rawDescOnce.Do(func() {
		file_proto_social_proto_rawDescData = protoimpl.X.CompressGZIP(unsafe.Slice(unsafe.StringData(file_proto_social_proto_rawDesc), len(file_proto_social_proto_rawDesc)))
	})
	return file_proto_social_proto_rawDescData
}

var file_proto_social_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_proto_social_proto_goTypes = []any{
	(*MessageRequest)(nil),  // 0: social.MessageRequest
	(*MessageResponse)(nil), // 1: social.MessageResponse
	(*FeedRequest)(nil),     // 2: social.FeedRequest
	(*FeedResponse)(nil),    // 3: social.FeedResponse
	(*StreamRequest)(nil),   // 4: social.StreamRequest
}
var file_proto_social_proto_depIdxs = []int32{
	0, // 0: social.FeedResponse.messages:type_name -> social.MessageRequest
	0, // 1: social.SocialService.SendMessage:input_type -> social.MessageRequest
	2, // 2: social.SocialService.GetFeed:input_type -> social.FeedRequest
	4, // 3: social.SocialService.StreamFeed:input_type -> social.StreamRequest
	1, // 4: social.SocialService.SendMessage:output_type -> social.MessageResponse
	3, // 5: social.SocialService.GetFeed:output_type -> social.FeedResponse
	0, // 6: social.SocialService.StreamFeed:output_type -> social.MessageRequest
	4, // [4:7] is the sub-list for method output_type
	1, // [1:4] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_proto_social_proto_init() }
func file_proto_social_proto_init() {
	if File_proto_social_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: unsafe.Slice(unsafe.StringData(file_proto_social_proto_rawDesc), len(file_proto_social_proto_rawDesc)),
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_proto_social_proto_goTypes,
		DependencyIndexes: file_proto_social_proto_depIdxs,
		MessageInfos:      file_proto_social_proto_msgTypes,
	}.Build()
	File_proto_social_proto = out.File
	file_proto_social_proto_goTypes = nil
	file_proto_social_proto_depIdxs = nil
}
