syntax = "proto3";

package social;
option go_package = "/proto";

service SocialService {
  // –û—Ç–ø—Ä–∞–≤–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è –æ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  rpc SendMessage (MessageRequest) returns (MessageResponse);

  // –ü–æ–ª—É—á–µ–Ω–∏–µ –≤—Å–µ–π –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
  rpc GetFeed (FeedRequest) returns (FeedResponse);

  // üî• –ü–æ—Ç–æ–∫–æ–≤–æ–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ: —Å–µ—Ä–≤–µ—Ä –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –Ω–æ–≤—ã–µ —Å–æ–æ–±—â–µ–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–∞–º
  rpc StreamFeed (StreamRequest) returns (stream MessageRequest);
}

// –ó–∞–ø—Ä–æ—Å –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É —Å–æ–æ–±—â–µ–Ω–∏—è
message MessageRequest {
  string username = 1; // –ò–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
  string content = 2;  // –¢–µ–∫—Å—Ç —Å–æ–æ–±—â–µ–Ω–∏—è
}

// –û—Ç–≤–µ—Ç –ø–æ—Å–ª–µ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è
message MessageResponse {
  bool success = 1;  // –£—Å–ø–µ—Ö –≤—ã–ø–æ–ª–Ω–µ–Ω–∏—è
}

// –ó–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ –∏—Å—Ç–æ—Ä–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
message FeedRequest {
  int32 limit = 1;  // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Å–æ–æ–±—â–µ–Ω–∏–π –¥–ª—è –∑–∞–ø—Ä–æ—Å–∞
}

// –û—Ç–≤–µ—Ç —Å –∏—Å—Ç–æ—Ä–∏–µ–π —Å–æ–æ–±—â–µ–Ω–∏–π
message FeedResponse {
  repeated MessageRequest messages = 1; // –°–ø–∏—Å–æ–∫ —Å–æ–æ–±—â–µ–Ω–∏–π
}

// –ü—É—Å—Ç–æ–π –∑–∞–ø—Ä–æ—Å –¥–ª—è –ø–æ—Ç–æ–∫–æ–≤–æ–≥–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
message StreamRequest {}
