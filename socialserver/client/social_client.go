package main

import (
	"bufio"
	"context"
	"fmt"
	"log"
	"os"
	"strconv"
	"time"

	pb "github.com/Belphisto/GOgRPCService/proto"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
)

// –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞
func displayChatHistory(socialClient pb.SocialServiceClient) {
	ctx, cancel := context.WithTimeout(context.Background(), time.Second)
	defer cancel()

	resp, err := socialClient.GetFeed(ctx, &pb.FeedRequest{})
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∏—Å—Ç–æ—Ä–∏–∏ —á–∞—Ç–∞: %v", err)
	}

	fmt.Println("\nüìú –ò—Å—Ç–æ—Ä–∏—è —á–∞—Ç–∞:")
	for _, msg := range resp.Messages {
		fmt.Printf("\nüì© –°–æ–æ–±—â–µ–Ω–∏–µ #%d –æ—Ç %s: %s (‚ù§Ô∏è %d –ª–∞–π–∫–æ–≤)\n", msg.MessageId, msg.Username, msg.Content, msg.LikeCount)
		for _, comment := range msg.Comments {
			fmt.Printf("üí¨ [%s]: %s\n", comment.Username, comment.Content)
		}
	}
}

func main() {
	log.Println("üöÄ –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏...")

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É gRPC
	clientConn, err := grpc.NewClient("localhost:50052", grpc.WithTransportCredentials(insecure.NewCredentials()))
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: %v", err)
	}
	defer clientConn.Close()

	socialClient := pb.NewSocialServiceClient(clientConn)
	reactionsClient := pb.NewReactionsServiceClient(clientConn)

	// –ß–∏—Ç–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	scanner := bufio.NewScanner(os.Stdin)
	fmt.Print("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è: ")
	scanner.Scan()
	username := scanner.Text()

	for {
		// –ü–µ—Ä–µ–¥ –∫–∞–∂–¥—ã–º –¥–µ–π—Å—Ç–≤–∏–µ–º –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
		displayChatHistory(socialClient)

		fmt.Print("\n–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:\n1 - –û—Ç–ø—Ä–∞–≤–∏—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n2 - –õ–∞–π–∫–Ω—É—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n3 - –ö–æ–º–º–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ\n4 - –ü—Ä–æ—Å–º–æ—Ç—Ä–µ—Ç—å —á–∞—Ç\n5 - –í—ã—Ö–æ–¥\n")
		scanner.Scan()
		action := scanner.Text()

		if action == "5" {
			fmt.Println("üëã –í—ã—Ö–æ–¥ –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞...")
			break
		}

		if action == "1" {
			// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
			fmt.Print("‚úè –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
			scanner.Scan()
			content := scanner.Text()

			ctx, cancel := context.WithTimeout(context.Background(), time.Second)
			defer cancel()

			_, err = socialClient.SendMessage(ctx, &pb.MessageRequest{Username: username, Content: content})
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
			}

		} else {
			// –õ–∞–π–∫ –∏–ª–∏ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
			fmt.Print("üì© –í–≤–µ–¥–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è: ")
			scanner.Scan()
			messageID, err := strconv.Atoi(scanner.Text())
			if err != nil {
				fmt.Println("‚ö† –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")
				continue
			}

			if action == "2" {
				// –õ–∞–π–∫ —Å–æ–æ–±—â–µ–Ω–∏—è
				_, err := reactionsClient.LikeMessage(context.Background(), &pb.LikeRequest{MessageId: int32(messageID), Username: username})
				if err != nil {
					log.Fatalf("–û—à–∏–±–∫–∞ –ª–∞–π–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
				}
				fmt.Printf("‚úÖ –õ–∞–π–∫ –æ—Ç %s –∫ —Å–æ–æ–±—â–µ–Ω–∏—é #%d\n", username, messageID)

			} else if action == "3" {
				// –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é
				fmt.Print("üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ")
				scanner.Scan()
				content := scanner.Text()

				_, err := reactionsClient.CommentMessage(context.Background(), &pb.CommentRequest{MessageId: int32(messageID), Username: username, Content: content})
				if err != nil {
					log.Fatalf("–û—à–∏–±–∫–∞ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏—è: %v", err)
				}
				fmt.Printf("‚úÖ –ö–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π –∫ —Å–æ–æ–±—â–µ–Ω–∏—é #%d –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω!\n", messageID)
			}
		}
	}
}
