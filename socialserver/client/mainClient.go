package main

import (
	"bufio"
	"context"
	"fmt"
	"log"
	"os"
	"strconv"
	"time"

	pb "github.com/Belphisto/GOgRPCService/proto"
	"github.com/Belphisto/GOgRPCService/socialserver/client/client"
	"google.golang.org/grpc"
	"google.golang.org/grpc/credentials/insecure"
)

func main() {
	log.Println("üöÄ –ó–∞–ø—É—Å–∫ –∫–ª–∏–µ–Ω—Ç–∞ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π —Å–µ—Ç–∏...")

	// –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ —Å–µ—Ä–≤–µ—Ä—É gRPC
	clientConn, err := grpc.Dial("localhost:50052", grpc.WithTransportCredentials(insecure.NewCredentials()))
	if err != nil {
		log.Fatalf("–û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: %v", err)
	}
	defer clientConn.Close()

	socialClient := pb.NewSocialServiceClient(clientConn)
	reactionsClient := pb.NewReactionsServiceClient(clientConn)

	// –ß–∏—Ç–∞–µ–º –∏–º—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
	username := client.ReadUsername()

	for {
		// –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –∏—Å—Ç–æ—Ä–∏—é —á–∞—Ç–∞
		client.DisplayChatHistory(socialClient)

		// –ß–∏—Ç–∞–µ–º –¥–µ–π—Å—Ç–≤–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
		action := client.ReadUserAction()

		if action == "5" {
			fmt.Println("üëã –í—ã—Ö–æ–¥ –∏–∑ –∫–ª–∏–µ–Ω—Ç–∞...")
			break
		}

		if action == "1" {
			// –û—Ç–ø—Ä–∞–≤–∫–∞ –Ω–æ–≤–æ–≥–æ —Å–æ–æ–±—â–µ–Ω–∏—è
			fmt.Print("‚úè –í–≤–µ–¥–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ: ")
			scanner := bufio.NewScanner(os.Stdin)
			scanner.Scan()
			content := scanner.Text()

			ctx, cancel := context.WithTimeout(context.Background(), time.Second)
			defer cancel()

			_, err = socialClient.SendMessage(ctx, &pb.MessageRequest{Username: username, Content: content})
			if err != nil {
				log.Fatalf("–û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏—è: %v", err)
			}

		} else {
			// –û–±—Ä–∞–±–æ—Ç–∫–∞ ID —Å–æ–æ–±—â–µ–Ω–∏—è
			fmt.Print("üì© –í–≤–µ–¥–∏—Ç–µ ID —Å–æ–æ–±—â–µ–Ω–∏—è: ")
			scanner := bufio.NewScanner(os.Stdin)
			scanner.Scan()
			messageID, err := strconv.Atoi(scanner.Text())
			if err != nil {
				fmt.Println("‚ö† –û—à–∏–±–∫–∞: –≤–≤–µ–¥–∏—Ç–µ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–π ID.")
				continue
			}

			if action == "2" {
				client.LikeMessage(reactionsClient, int32(messageID), username)
			} else if action == "3" {
				fmt.Print("üí¨ –í–≤–µ–¥–∏—Ç–µ –∫–æ–º–º–µ–Ω—Ç–∞—Ä–∏–π: ")
				scanner.Scan()
				content := scanner.Text()
				client.CommentMessage(reactionsClient, int32(messageID), username, content)
			}
		}
	}
}
